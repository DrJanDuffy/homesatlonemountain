---
// RealScoutSearch.astro
import { publicEnv } from '../../utils/env';

interface Props {
  agentId?: string;
  market?: string;
}

const {
  agentId = publicEnv.PUBLIC_REALSCOUT_AGENT_ID,
  market = publicEnv.PUBLIC_REALSCOUT_MARKET
} = Astro.props;
---

<div class="realscout-container">
  <div class="loading-overlay" id="loading">
    <div class="spinner"></div>
    <p>Loading properties...</p>
  </div>
  <div class="error-state hidden" id="error">
    <p>Unable to load properties</p>
    <button onclick="retryLoad()">Retry</button>
  </div>
  <realscout-advanced-search
    id="realscout-widget"
    agent-encoded-id={agentId}
    market={market}
    sort-order="price-desc"
    listing-status="active"
    property-types="single-family,townhouse,condo"
    price-min="500000"
    error-mode="graceful"
  ></realscout-advanced-search>
</div>

<script>
  function setupWidget() {
    const widget = document.getElementById('realscout-widget');
    const loading = document.getElementById('loading');
    const error = document.getElementById('error');

    // Lazy load when widget is 50% visible
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            loading?.classList.remove('hidden');
            widget?.setAttribute('data-load', 'true');
            observer.disconnect();
          }
        });
      },
      { threshold: 0.5 }
    );

    if (widget) {
      observer.observe(widget);

      widget.addEventListener('load', () => {
        loading?.classList.add('hidden');
      });

      widget.addEventListener('error', (e) => {
        console.error('RealScout widget error:', e.detail);
        loading?.classList.add('hidden');
        error?.classList.remove('hidden');
      });
    }
  }

  function retryLoad() {
    const widget = document.getElementById('realscout-widget');
    const error = document.getElementById('error');
    const loading = document.getElementById('loading');

    if (widget) {
      error?.classList.add('hidden');
      loading?.classList.remove('hidden');
      widget.setAttribute('data-load', 'true');
    }
  }

  // Initialize widget when the DOM is ready
  document.addEventListener('DOMContentLoaded', setupWidget);
</script>

<style>
  .realscout-container {
    position: relative;
    width: 100%;
    max-width: 500px;
    min-height: 480px;
    margin: 0 auto;
  }

  .loading-overlay,
  .error-state {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background: rgba(255, 255, 255, 0.9);
    z-index: 1000;
  }

  .hidden {
    display: none;
  }

  .spinner {
    width: 40px;
    height: 40px;
    border: 4px solid #f3f3f3;
    border-top: 4px solid #3A8DDE;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  .error-state button {
    margin-top: 1rem;
    padding: 0.5rem 1rem;
    background: #3A8DDE;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background 0.2s;
  }

  .error-state button:hover {
    background: #2c6eb3;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  @media (max-width: 768px) {
    .realscout-container {
      max-width: 100%;
    }
  }
</style> 